#!/bin/sh
# pre-commit file
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
# Execute shellcheck to check bash scripts.

if [ -z "$GIT_AUTHOR_DATE" ]; then  # it's blank (testing standalone):
   GIT_AUTHOR_DATE="@1522308872 -0600" # provide sample input
   GIT_AUTHOR_NAME="Wilson Mar"
   GIT_AUTHOR_EMAIL="WilsonMar@gmail.com"
fi
   #echo "GIT_AUTHOR_DATE=$GIT_AUTHOR_DATE"
GIT_AUTHOR_YMD=${GIT_AUTHOR_DATE#"@"}  # # refers to the beginning char to strip.
GIT_AUTHOR_YMD=${GIT_AUTHOR_YMD%' '*} # strips chars from end of string after the space.
GIT_AUTHOR_YMD=$(date -r "$GIT_AUTHOR_YMD" '+%Y-%m-%d:%H:%M:%S')  # such as: 2018-03-28:17:48:43
GIT_AUTHOR_TZ=${GIT_AUTHOR_DATE:(-5)} # extracts last 5 chars from end of string.
echo "pre-commit at $GIT_AUTHOR_YMD $GIT_AUTHOR_TZ for $GIT_AUTHOR_NAME of $GIT_AUTHOR_EMAIL."
exit 0  # 1 is error.
